# SonarQube Project Configuration for Gig-Rush Platform
# Unique project identifier (required)
sonar.projectKey=gig-rush-mvp
sonar.organization=your-organization

# Project metadata
sonar.projectName=Gig-Rush Local Marketplace Platform
sonar.projectVersion=1.0.0
sonar.projectDescription=A local gig marketplace connecting job posters with workers, built with Node.js, GraphQL, and Socket.IO

# Source code configuration
sonar.sources=src,graphql,models,databases,middlewares,socket
sonar.tests=test,tests,__tests__,spec

# Exclusions - files and directories to exclude from analysis
sonar.exclusions=**/node_modules/**,**/dist/**,**/build/**,**/coverage/**,**/docs/**,**/*.env,**/*.log,**/uploads/**

# Test file exclusions
sonar.test.exclusions=**/*.test.js,**/*.spec.js,**/*.test.ts,**/*.spec.ts

# Coverage configuration
sonar.coverage.exclusions=**/test/**,**/tests/**,**/__tests__/**,**/spec/**,**/coverage/**,**/node_modules/**,**/env.js

# Language-specific configurations

# JavaScript/TypeScript
sonar.javascript.lcov.reportPaths=coverage/lcov.info,coverage/lcov-report/lcov.info
sonar.typescript.lcov.reportPaths=coverage/lcov.info
sonar.javascript.file.suffixes=.js,.jsx
sonar.typescript.file.suffixes=.ts,.tsx

# Python
sonar.python.coverage.reportPaths=coverage.xml,htmlcov/coverage.xml
sonar.python.xunit.reportPath=test-results.xml

# Java
sonar.java.coveragePlugin=jacoco
sonar.jacoco.reportPaths=target/jacoco.exec,build/jacoco/test.exec
sonar.junit.reportPaths=target/surefire-reports,build/test-results/test
sonar.java.binaries=target/classes,build/classes/java/main

# C#/.NET
sonar.cs.dotcover.reportsPaths=coverage.html
sonar.cs.opencover.reportsPaths=coverage.xml
sonar.cs.nunit.reportsPaths=TestResults.xml

# Quality gate settings
sonar.qualitygate.wait=true
sonar.qualitygate.timeout=300

# Analysis scope
sonar.scm.provider=git

# Duplication settings
sonar.cpd.exclusions=**/*.min.js,**/vendor/**

# Security hotspots
sonar.security.hotspots.inheritFromParent=true

# Technical debt settings
sonar.sqale.index=SQALE_RATING

# Branch analysis (for SonarCloud)
# sonar.branch.name=feature/my-feature
# sonar.branch.target=main

# Pull request analysis (for SonarCloud)
# sonar.pullrequest.key=123
# sonar.pullrequest.branch=feature/my-feature
# sonar.pullrequest.base=main

# Custom quality profiles (optional)
# sonar.profile.js=Your JavaScript Profile
# sonar.profile.py=Your Python Profile
# sonar.profile.java=Your Java Profile

# Additional properties for specific project needs

# For monorepo or multi-module projects
# sonar.modules=module1,module2
# module1.sonar.projectName=Module 1
# module1.sonar.sources=module1/src
# module1.sonar.tests=module1/test
# module2.sonar.projectName=Module 2
# module2.sonar.sources=module2/src
# module2.sonar.tests=module2/test

# Maven specific (if using Maven)
# sonar.maven.excludedPaths=**/target/**

# Gradle specific (if using Gradle)
# sonar.gradle.excludedPaths=**/build/**

# Custom metrics and rules
# sonar.issue.ignore.multicriteria=e1,e2
# sonar.issue.ignore.multicriteria.e1.ruleKey=javascript:S1481
# sonar.issue.ignore.multicriteria.e1.resourceKey=**/test/**
# sonar.issue.ignore.multicriteria.e2.ruleKey=python:S1192
# sonar.issue.ignore.multicriteria.e2.resourceKey=**/migration/**

# Performance tuning
sonar.log.level=INFO
sonar.scanner.metadataFilePath=target/sonar/report-task.txt

# Environment-specific overrides
# For development
# sonar.host.url=http://localhost:9000

# For staging/production (use environment variables in CI/CD)
# These should be set via environment variables:
# SONAR_HOST_URL=https://sonarcloud.io
# SONAR_TOKEN=your_sonar_token
